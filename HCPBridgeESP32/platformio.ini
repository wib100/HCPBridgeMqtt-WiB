; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
;set your env you want to build default esp32 without any sensor. Comment line to build all environments.
;list separeted by , to build selected evns.
default_envs = esp32, esp32_BME280_HCSR04, m5stack-stamps3, HCP_Giffordv1a, HCP_Giffordv1b, HCP_Giffordv2a, HCP_Giffordv2b

[common]
dht22libs =
	adafruit/DHT sensor library@^1.4.4
bmelibs =
	adafruit/Adafruit BME280 Library
ds18x20libs =
	milesburton/DallasTemperature

[env]
platform = espressif32@6.9.0
board = wemos_d1_mini32
framework = arduino
board_build.f_cpu = 240000000L
board_build.f_flash = 80000000L
board_build.flash_mode = qio
monitor_speed = 115200
monitor_filters = esp32_exception_decoder
lib_ldf_mode = deep+
lib_compat_mode = strict
lib_deps =
	https://github.com/me-no-dev//ESPAsyncWebServer
	https://github.com/me-no-dev/AsyncTCP
	heman/AsyncMqttClient-esphome@^2.1.0
	bblanchon/ArduinoJson
	plerup/EspSoftwareSerial
	ayushsharma82/ElegantOTA
	paulstoffregen/OneWire
	emelianov/modbus-esp8266
	https://github.com/dok-net/ghostl ; << Fix missing circular_queue.h
	adafruit/Adafruit Unified Sensor
	adafruit/Adafruit BME280 Library
extra_scripts = pre:./WebUI/webpage/compress.py, pre:build_output.py
build_flags=-DELEGANTOTA_USE_ASYNC_WEBSERVER=1
;build_flags = 
;	-D CORE_DEBUG_LEVEL=ARDUHAL_LOG_LEVEL_VERBOSE
;	-D DEBUG

[env:esp32]

[env:esp32_DS18X20]
lib_deps = ${env:esp32.lib_deps} ${common.ds18x20libs}
build_flags = ${env:esp32.build_flags} -D SENSORS -D USE_DS18X20

[env:esp32_BME280]
lib_deps = 	${env:esp32.lib_deps} ${common.bmelibs}
build_flags = ${env:esp32.build_flags} -D SENSORS -D USE_BME

[env:esp32_HCSR04]
build_flags = ${env:esp32.build_flags} -D SENSORS -D USE_HCSR04

[env:esp32_BME280_HCSR04]
lib_deps = 	${env:esp32.lib_deps} ${common.bmelibs}
build_flags = ${env:esp32.build_flags} -D SENSORS -D USE_BME -D USE_HCSR04

[env:esp32_dht22]
lib_deps = ${env:esp32.lib_deps} ${common.dht22libs}
build_flags = ${env:esp32.build_flags} -D SENSORS -D USE_DHT22

[env:esp32_HCSR501]
build_flags = ${env:esp32.build_flags} -D SENSORS -D USE_HCSR501

[env:esp32s3_tynet]
board = adafruit_feather_esp32s3
board_build.f_flash = 40000000L
build_flags = ${env:esp32.build_flags}

[env:esp32s3_tynet_DHT22]
extends = env:esp32s3_tynet
lib_deps = ${env:esp32.lib_deps} ${common.dht22libs}
build_flags = ${env:esp32.build_flags} -D SENSORS -D USE_DHT22

[env:esp32s3_tynet_DS18X20]
extends = env:esp32s3_tynet
lib_deps = ${env:esp32.lib_deps} ${common.ds18x20libs}
build_flags = ${env:esp32.build_flags} -D SENSORS -D USE_DS18X20

[env:esp32s3_tynet_BME280]
extends = env:esp32s3_tynet
lib_deps = 	${env:esp32.lib_deps} ${common.bmelibs}
build_flags = ${env:esp32.build_flags} -D SENSORS -D USE_BME

[env:esp32s3_tynet_HCSR04]
extends = env:esp32s3_tynet
build_flags = ${env:esp32.build_flags} -D SENSORS -D USE_HCSR04

[env:esp32s3_tynet_BME280_HCSR04]
extends = env:esp32s3_tynet
lib_deps = ${env:esp32.lib_deps} ${common.bmelibs}
build_flags = ${env:esp32.build_flags} -D SENSORS -D USE_BME -D USE_HCSR04

[env:esp32s3_tynet_dht22]
extends = env:esp32s3_tynet
lib_deps = ${env:esp32.lib_deps} ${common.dht22libs}
build_flags = ${env:esp32.build_flags} -D SENSORS -D USE_DHT22

[env:m5stack-stamps3]
board = m5stack-stamps3
build_flags = ${env:esp32.build_flags} -D M5STACK

[env:m5stack-stamps3_BME280]
extends = env:m5stack-stamps3
lib_deps = ${env:esp32.lib_deps} ${common.bmelibs}
build_flags = ${env:m5stack-stamps3.build_flags} -D SENSORS -D USE_BME

[env:m5stack-stamps3_BME280_HCSR04]
extends = env:m5stack-stamps3_BME280
build_flags = ${env:m5stack-stamps3_BME280.build_flags} -D USE_HCSR04

[env:HCP_Giffordv1a]
build_flags = ${env:esp32.build_flags} -D SENSORS -D USE_HCSR501 -D USE_BME

[env:HCP_Giffordv1b]
extends = env:HCP_Giffordv1a
build_flags = ${env:HCP_Giffordv1a.build_flags} -D USE_HCSR04

[env:HCP_Giffordv2a]
board = esp32-s3-devkitc-1			# https://docs.platformio.org/en/latest/frameworks/espidf.html#boards
platform = espressif32 @ 6.9.0
framework = arduino
#board_build.f_flash = 40000000L
board_build.arduino.memory_type = qio_qspi
board_build.flash_mode = qio
board_build.psram_type = qio
board_upload.flash_size = 4MB
board_upload.maximum_size = 4194304
board_build.partitions = default.csv		# https://docs.platformio.org/en/latest/platforms/espressif32.html#partition-tables
board_build.extra_flags = 
  -DBOARD_HAS_PSRAM
build_flags = ${env:esp32.build_flags} -D HCP_Giffordv2 -D SENSORS -D USE_HCSR501 -D USE_BME

[env:HCP_Giffordv2b]
extends = env:HCP_Giffordv2a
build_flags = ${env:HCP_Giffordv2a.build_flags} -D USE_HCSR04
